@{
    ViewData["Title"] = "Contact";
}
<h2>@ViewData["Title"]</h2>
<h3>@ViewData["Message"]</h3>
<address>
    One Microsoft Way<br />
    Redmond, WA 98052-6399<br />
    <abbr title="Phone">P:</abbr>
    425.555.0100
</address>
<address>
    <strong>Support:</strong> <a href="mailto:Support@example.com">Support@example.com</a><br />
    <strong>Marketing:</strong> <a href="mailto:Marketing@example.com">Marketing@example.com</a>
</address>

@*<script src="https://cdnjs.cloudflare.com/ajax/libs/bluebird/3.3.4/bluebird.min.js"></script>
<script src="https://secure.aadcdn.microsoftonline-p.com/lib/1.0.0/js/msal.js"></script>*@

<div class="container">
    <div class="leftContainer">
        <p id="WelcomeMessage">Welcome to the Microsoft Authentication Library For Javascript Quickstart</p>
        <button id="SignIn" onclick="signIn()">Sign In</button>
    </div>
    <div class="rightContainer">
        <pre id="json"></pre>
        <pre id="callAnn"></pre>
    </div>
    <button id="call" onclick="CallAAD()">call api/values Auth</button>
    <div>
        <button id="call" onclick="callAnn()">call api/values/5 </button>
    </div>
</div>
<button id="call" onclick="call()">call api/values Send token</button>
<div>
</div>
<script type="text/javascript">
    //1 expired value for web26, 2, not from web26 3 valid token
    var accessToken_p = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkJCOENlRlZxeWFHckdOdWVoSklpTDRkZmp6dyIsImtpZCI6IkJCOENlRlZxeWFHckdOdWVoSklpTDRkZmp6dyJ9.eyJhdWQiOiJodHRwczovL3ByYXZlZW5hemhvdG1haWwub25taWNyb3NvZnQuY29tL1dlYkFwcGxpY2F0aW9uMjYiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC85ZTY4YTBkYy1iOWI5LTRlMjAtOTM2Yi00ZWZmMjU3MmUwNDgvIiwiaWF0IjoxNTc0ODU0NTQ4LCJuYmYiOjE1NzQ4NTQ1NDgsImV4cCI6MTU3NDg1ODQ0OCwiYWlvIjoiNDJWZ1lKajIzM0hoc3ozZVc3MXpHbUpQOVJ1ZUFRQT0iLCJhcHBpZCI6ImZmMDJhZDMyLTliNTItNDc0ZC1iN2Q0LTYxNzNlNGM1ODE5NyIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzllNjhhMGRjLWI5YjktNGUyMC05MzZiLTRlZmYyNTcyZTA0OC8iLCJvaWQiOiI3MDg4YzczMi03M2M4LTRkYTctOGZiYi1kOGYzMzkxN2JlMTgiLCJzdWIiOiI3MDg4YzczMi03M2M4LTRkYTctOGZiYi1kOGYzMzkxN2JlMTgiLCJ0aWQiOiI5ZTY4YTBkYy1iOWI5LTRlMjAtOTM2Yi00ZWZmMjU3MmUwNDgiLCJ1dGkiOiJvTGZrUTg0dmZrZUM0cnZvM1ZscUFBIiwidmVyIjoiMS4wIn0.lKYPHW4jYXxv4shiFri3T0BvcVJaDHRtwu8vf7yNNxGuITj1VQ53AgohjiSJZwmFuD8INBGUTp71o7KA9IJQGTdSUWed6YJAzkWXzVKeMEmlQBG-j2-hI39wT8RbSTmODtf222CP19K6Onx17rMizMSZoo4fCM987sKA2rrU3AIDOFnGg-eXjd3HNKbvvH3etKieKcwEuKDyiU0Bxho6sez1t-Mi-GjnHDKuwDsdP2Ra4hHNuCIGuuyWkXLPz92ntvzcEIur_5q_gcPiYa3wisDCvE_zoOaOSA1eesxR-ovndTrpdOnvYkUDX3mqgMkpirYkqJlOFkZFW_7lZqiwHA";
    //accessToken_p = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkJCOENlRlZxeWFHckdOdWVoSklpTDRkZmp6dyIsImtpZCI6IkJCOENlRlZxeWFHckdOdWVoSklpTDRkZmp6dyJ9.eyJhdWQiOiIwMDAwMDAwMi0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC85ZTY4YTBkYy1iOWI5LTRlMjAtOTM2Yi00ZWZmMjU3MmUwNDgvIiwiaWF0IjoxNTc0OTMxMTc4LCJuYmYiOjE1NzQ5MzExNzgsImV4cCI6MTU3NDkzNTA3OCwiYWlvIjoiNDJWZ1lGQmhMdHVjKzZmWFZFSmJkdmQ4bmxudkFRPT0iLCJhcHBpZCI6ImYwZWJjYzkzLTE1ZjEtNDM4MS04NWM3LTIxMjgxMDIwZTRlNSIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzllNjhhMGRjLWI5YjktNGUyMC05MzZiLTRlZmYyNTcyZTA0OC8iLCJvaWQiOiJhNDYwNWNmMy1lNGY3LTQ3OWMtOTVlMC00NGNjMDIwZDRkNjgiLCJzdWIiOiJhNDYwNWNmMy1lNGY3LTQ3OWMtOTVlMC00NGNjMDIwZDRkNjgiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiQVMiLCJ0aWQiOiI5ZTY4YTBkYy1iOWI5LTRlMjAtOTM2Yi00ZWZmMjU3MmUwNDgiLCJ1dGkiOiJ5RUZFV3FhRDhrZXBhczhmc1ZyM0FBIiwidmVyIjoiMS4wIn0.FoYRYqY6B0dE4CZDLQTz7lWz-KLtT8M_2CYkE9zmjSqZr2OHJm7G1Z969gxhhc3Wb5ZLjYmUTj-d5-_2hDucwQCzmRAeqQmj4ZCYWXensrj0UQM_z2e7tPtryVKXK9jIgOSUAcPlMNKuUmAWRWlhncuHESk0bICatKXTnBSfS0XdDCM_yoP5UHYpp8kbkmsN_hfzbi_SBygLzWVHcWAyWXkOFJn6s9LsEX5vjtobRMyy2p51nJRHYZP0gavKp0ftTsZlvo8WHnuxfojSd_HyoWeMZsg9RoVyQf9LRdG7ZqxOl-weA0156a2rdakcAVhaTw1csbAAOHfSKDE2kFubmw";
    accessToken_p = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkJCOENlRlZxeWFHckdOdWVoSklpTDRkZmp6dyIsImtpZCI6IkJCOENlRlZxeWFHckdOdWVoSklpTDRkZmp6dyJ9.eyJhdWQiOiJodHRwczovL3ByYXZlZW5hemhvdG1haWwub25taWNyb3NvZnQuY29tL1dlYkFwcGxpY2F0aW9uMjYiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC85ZTY4YTBkYy1iOWI5LTRlMjAtOTM2Yi00ZWZmMjU3MmUwNDgvIiwiaWF0IjoxNTc0OTQ0MDc5LCJuYmYiOjE1NzQ5NDQwNzksImV4cCI6MTU3NDk0Nzk3OSwiYWlvIjoiNDJWZ1lKZ2NMaHViOGFqbnhtR2xsWC9tSnI5a0F3QT0iLCJhcHBpZCI6ImZmMDJhZDMyLTliNTItNDc0ZC1iN2Q0LTYxNzNlNGM1ODE5NyIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzllNjhhMGRjLWI5YjktNGUyMC05MzZiLTRlZmYyNTcyZTA0OC8iLCJvaWQiOiI3MDg4YzczMi03M2M4LTRkYTctOGZiYi1kOGYzMzkxN2JlMTgiLCJzdWIiOiI3MDg4YzczMi03M2M4LTRkYTctOGZiYi1kOGYzMzkxN2JlMTgiLCJ0aWQiOiI5ZTY4YTBkYy1iOWI5LTRlMjAtOTM2Yi00ZWZmMjU3MmUwNDgiLCJ1dGkiOiI2a0hqUkg0Y1BFeUNKcmR3OEdzVEFRIiwidmVyIjoiMS4wIn0.WXiIpNaVsCBl-V1YLdrv7aa8t4d6HmPRHNpdN1tQZmLPokRuQtJLTU28_kQ9RKW3SWyqo1PRGmXqhfHfyD2d1g8h_ZjLgIFygn5sFkF4j8op_VxCJWqhjltATi-fnI_FhwetRt8f6p8rwajsFh2fwQDwwH7pc2vRM956-h-rMTdpBpAajjQHWN8MCEx2IhDP8z_ug-w6eB--MDsPPjRU1ymS4b7n1Wv2dm9mHBHPY4_ZoiGrXARKP1shTvTM_-sAQ5MRlM8P6S-1ZhQ6n1O17yp_rhxBVMeVQtSxBxQiT6Rt2zFAsavYpjjwswAILiuqzWLkdJj5Ab8VzpUf2Y_KFQ";

   // accessToken_p = "eyJ0eXAiOiJKV1QiLCJub25jZSI6Ik9SS254OHVOZXYyVVBIenhCTlZvZDJPalhxRXJHdDg5dVdQd0tPTDV5bTAiLCJhbGciOiJSUzI1NiIsIng1dCI6IkJCOENlRlZxeWFHckdOdWVoSklpTDRkZmp6dyIsImtpZCI6IkJCOENlRlZxeWFHckdOdWVoSklpTDRkZmp6dyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC85ZTY4YTBkYy1iOWI5LTRlMjAtOTM2Yi00ZWZmMjU3MmUwNDgvIiwiaWF0IjoxNTc0OTQ2Mzg4LCJuYmYiOjE1NzQ5NDYzODgsImV4cCI6MTU3NDk1MDI4OCwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFVUUF1LzhOQUFBQU9OWTRXcG5kWXkzZ3kyN2t3ZE5aYU9Ud1FIWWpaeUJ4bHZmbHVpdVFPdk9KRzB6TzVDa1F5b2Fic2M3aFJaeTFRS2h5SHR3c1hmS29GT0p4WE40VENBPT0iLCJhbHRzZWNpZCI6IjE6bGl2ZS5jb206MDAwNjQwMDBGRTZDMDM5NSIsImFtciI6WyJwd2QiXSwiYXBwX2Rpc3BsYXluYW1lIjoiUHJhdmVlbiIsImFwcGlkIjoiMGYxYzFhMmUtYTNkYy00Y2FjLTgwYzYtOTQwM2M0ZjAzNDAwIiwiYXBwaWRhY3IiOiIwIiwiZW1haWwiOiJwcmF2ZWVuLmF6QGhvdG1haWwuY29tIiwiZmFtaWx5X25hbWUiOiJBWiIsImdpdmVuX25hbWUiOiJQcmF2ZWVuIiwiaWRwIjoibGl2ZS5jb20iLCJpcGFkZHIiOiIxMTQuMTQzLjE0OS4xNzQiLCJuYW1lIjoiUHJhdmVlbiBBWiIsIm9pZCI6Ijk5MmVmYTY3LTA3ZmYtNDhjZS05YmRkLTVkZTQ0NDAwNWMzMyIsInBsYXRmIjoiMyIsInB1aWQiOiIxMDAzMjAwMDUwREYzQjVGIiwic2NwIjoiRGlyZWN0b3J5LlJlYWQuQWxsIGVtYWlsIG9wZW5pZCBwcm9maWxlIFVzZXIuUmVhZCBVc2VyLlJlYWRCYXNpYy5BbGwiLCJzdWIiOiJSX3JMS3lLX2VFTlVBd3VBV0Z0WG0zaHlJZHNmZkxMT3RIVy1aNU95a2tZIiwidGlkIjoiOWU2OGEwZGMtYjliOS00ZTIwLTkzNmItNGVmZjI1NzJlMDQ4IiwidW5pcXVlX25hbWUiOiJsaXZlLmNvbSNwcmF2ZWVuLmF6QGhvdG1haWwuY29tIiwidXRpIjoiUTMxMXFLLXhRMGVkUS1DTlpOSHRBQSIsInZlciI6IjEuMCIsInhtc19zdCI6eyJzdWIiOiJ5MGZZX1Fpa1Y3YldVMzZHVno1MUZ2STU1ZXhRNFVodDNmNHpNd250c3BjIn0sInhtc190Y2R0IjoxNTYzMTgwMTgyfQ.nRoXuOOI1jn0ciTIb2JsJE9Kb_edm_FT_rHQjguqp0yFGw2VUeA6G8iWc20bSxPZmA19U_pWDSgPy7TE4h1qIqDmJokm8XAzPAFv6mHnNe_NiHPMI-wbiwLRyfN4Vy72GYGeWa8V0o9PdzsJ7Asco9NQxSTPiedAAx37UOb2_g0gPH9G4BT5g-UrpRlDbkdY2qkHcXm2BG_IbfANMBMQ4snSc-gxy2KrWcxfoXzoOr2euuDFs9UMzwC6WjeQT_p5tt8m6KYioNgAqABx9G9CgZdlmMRjmYGwLyBWYfmSXhEI86cfX1ubGs_Sx6tssOAWWdDzjzjMgx9LowwA01iu8w";
    //4 - token from Azure App Praveen - another app
    function gettoken() {
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200)
                console.log(this.responseText);
        }
        xmlHttp.open("GET", "https://login.microsoftonline.com/9e68a0dc-b9b9-4e20-936b-4eff2572e048/oauth2/token", true); // true for asynchronous
        xmlHttp.setRequestHeader('clientSecret', 'O2foAz+EuOxOL+qAXjp68jIF4TpUm7xN1KYGfYR0etk=');
        xmlHttp.setRequestHeader('clientId', 'ff02ad32-9b52-474d-b7d4-6173e4c58197');
        xmlHttp.setRequestHeader('resource', 'https://praveenazhotmail.onmicrosoft.com/WebApplication26');
        xmlHttp.setRequestHeader('scope', 'https://praveenazhotmail.onmicrosoft.com/WebApplication26/user_impersonation');
        xmlHttp.send();

    }
    function CallAAD() {
        var settings = {
            "async": true,
            "crossDomain": true,
            "url": "https://login.microsoftonline.com/9e68a0dc-b9b9-4e20-936b-4eff2572e048/oauth2/token",
            "method": "POST",
            "headers": {
                "content-type": "application/x-www-form-urlencoded",
                "cache-control": "no-cache",
                "Access-Control-Allow-Origin": "*"
            },
            "data": {
                "grant_type": "client_credentials",
                "client_id": "ff02ad32-9b52-474d-b7d4-6173e4c58197",
                "client_secret": "O2foAz+EuOxOL+qAXjp68jIF4TpUm7xN1KYGfYR0etk=",
                "resource": "https://saurabhpersonalad.onmicrosoft.com/WebApplication6"
            }
        }

        $.support.cors = true;

        $.ajax(settings).done(function (response) {
            debugger;
            alert(response);
        });
    }
    function call() {
        //gettoken();
        //debugger;
        //$.ajax({
        //    dataType: 'jsonp',
        //    url: "https://localhost:44328/api/values",
        //    data: {
        //        'access_token': accessToken
        //    },
        //    jsonpCallback: '/callback',
        //    success: function (data) {
        //        console.log(data);
        //    },
        //    error: function (d) {
        //        console.log(d);
        //    }
        //});
        ajx();
    }
    function ajx() {
        $.ajax({
            url: "https://localhost:44328/api/values",
            headers: { "Authorization": 'Bearer ' + accessToken_p }
        }).done(function (data) {
            console.log(data);
            $("#callAnn").html(data);
            //ajxGroup(accessToken_p);
        })
            .fail(function (jqXHR, textStatus) {
                alert("error: " + textStatus);
            });
    }
    function ajxGroup(accessToken) {
        accessToken = "eyJ0eXAiOiJKV1QiLCJub25jZSI6ImUySGRaMkNnNlJIYjRtSk13b0EzdUxwM1BOZWNoV2twRjBHSXFUUHpXbXciLCJhbGciOiJSUzI1NiIsIng1dCI6IkJCOENlRlZxeWFHckdOdWVoSklpTDRkZmp6dyIsImtpZCI6IkJCOENlRlZxeWFHckdOdWVoSklpTDRkZmp6dyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC85ZTY4YTBkYy1iOWI5LTRlMjAtOTM2Yi00ZWZmMjU3MmUwNDgvIiwiaWF0IjoxNTc0OTM1NTEyLCJuYmYiOjE1NzQ5MzU1MTIsImV4cCI6MTU3NDkzOTQxMiwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFVUUF1LzhOQUFBQVpzT3ZBRDFUSnNjbDZhd3loazRvOUZaZWx0UU9mbU9ITFV1eHRsd0UwaHB2WC9vWVZqWGRLTWR3MXVybjFieDhEZ3EvMEhmaERtdGY4V2ZJb0NYbWZnPT0iLCJhbHRzZWNpZCI6IjE6bGl2ZS5jb206MDAwNjQwMDBGRTZDMDM5NSIsImFtciI6WyJwd2QiXSwiYXBwX2Rpc3BsYXluYW1lIjoiV0VCNU5PViIsImFwcGlkIjoiMzM1NTFmMTktNzdhYS00MzY1LTkyZjktM2FmNWQ3MDBlZTIyIiwiYXBwaWRhY3IiOiIwIiwiZW1haWwiOiJwcmF2ZWVuLmF6QGhvdG1haWwuY29tIiwiZmFtaWx5X25hbWUiOiJBWiIsImdpdmVuX25hbWUiOiJQcmF2ZWVuIiwiaWRwIjoibGl2ZS5jb20iLCJpcGFkZHIiOiIxMTQuMTQzLjE0OS4xNzQiLCJuYW1lIjoiUHJhdmVlbiBBWiIsIm9pZCI6Ijk5MmVmYTY3LTA3ZmYtNDhjZS05YmRkLTVkZTQ0NDAwNWMzMyIsInBsYXRmIjoiMyIsInB1aWQiOiIxMDAzMjAwMDUwREYzQjVGIiwic2NwIjoib3BlbmlkIHByb2ZpbGUgVXNlci5SZWFkIGVtYWlsIiwic3ViIjoiUl9yTEt5S19lRU5VQXd1QVdGdFhtM2h5SWRzZmZMTE90SFctWjVPeWtrWSIsInRpZCI6IjllNjhhMGRjLWI5YjktNGUyMC05MzZiLTRlZmYyNTcyZTA0OCIsInVuaXF1ZV9uYW1lIjoibGl2ZS5jb20jcHJhdmVlbi5hekBob3RtYWlsLmNvbSIsInV0aSI6InFlSWtUU3kxbVU2akJZc09IVzZCQUEiLCJ2ZXIiOiIxLjAiLCJ4bXNfc3QiOnsic3ViIjoiQ3dZMG55THB5Tm1Obzd5X1ZudU1ZTjFTdmQwa3hydEwwVEhCX3BTUVRRWSJ9LCJ4bXNfdGNkdCI6MTU2MzE4MDE4Mn0.Z4kGQ0D93LP3o52BpXgsWyl-w3E8DwlIMGWSaoZAEcySWiTUYpgxgspAInG9RhFah15oigeU4lz4vLPUjCU8wS9d4jAGjojld3yJJ6J3bGU9cjMaAlv3hSBP1l4moWeuOSUHC8SxdcahZvOl3VA7Ut3oRa5ry6G1l9Ls7x7qKqQaSmbh5qsnXKohWz4Xj_TKdlztBC7ZRVu5s5pLUArUJbwvOLHGXOLzwzuSTD-9B6gHJenTq0AAL97Kg_r0scCvbDkdCmd6ShVPZqV8aaxSYBSEYbDfWh_cUNcdbl-BmPX3OkeFlKxXNCarOIoUxvRrN394DbbRf7qBPTGzqbb7ug";
        $.ajax({
            url: "https://graph.microsoft.com/v1.0/me/",
            headers: { "Authorization": 'Bearer ' + accessToken }
        }).done(function (data) {
            console.log(data);
        })
            .fail(function (jqXHR, textStatus) {
                alert("error: " + textStatus);
            });
    }


    function callAnn() {
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                console.log(this.responseText);
                $("#callAnn").html(this.responseText);
            }
        }
        xmlHttp.open("GET", "https://localhost:44328/api/values/1", true); // true for asynchronous
        xmlHttp.send();
    }

    
    var msalConfig = {
        auth: {
            clientId: '0f1c1a2e-a3dc-4cac-80c6-9403c4f03400', //This is your client ID
            authority: "https://login.microsoftonline.com/9e68a0dc-b9b9-4e20-936b-4eff2572e048" //This is your tenant info
        },
        cache: {
            cacheLocation: "localStorage",
            storeAuthStateInCookie: true
        }
    };

    var graphConfig = {
        graphMeEndpoint: "https://graph.microsoft.com/v1.0/me"
    };

    // create a request object for login or token request calls
    // In scenarios with incremental consent, the request object can be further customized
    var requestObj = {
        scopes: ["user.read"]
    };

    var myMSALObj = new Msal.UserAgentApplication(msalConfig);

    // Register Callbacks for redirect flow
    // myMSALObj.handleRedirectCallbacks(acquireTokenRedirectCallBack, acquireTokenErrorRedirectCallBack);
    myMSALObj.handleRedirectCallback(authRedirectCallBack);

    function signIn() {
        myMSALObj.loginPopup(requestObj).then(function (loginResponse) {
            //Successful login
            console.log('Login sucess npm se');
            showWelcomeMessage();
            //Call MS Graph using the token in the response
            acquireTokenPopupAndCallMSGraph();
        }).catch(function (error) {
            //Please check the console for errors
            console.log(error);
        });
    }

    function signOut() {
        myMSALObj.logout();
    }

    function acquireTokenPopupAndCallMSGraph() {
        //Always start with acquireTokenSilent to obtain a token in the signed in user from cache
        myMSALObj.acquireTokenSilent(requestObj).then(function (tokenResponse) {
            console.log('called' + tokenResponse);
            callMSGraph(graphConfig.graphMeEndpoint, tokenResponse.accessToken, graphAPICallback);
        }).catch(function (error) {
            console.log(error);
            // Upon acquireTokenSilent failure (due to consent or interaction or login required ONLY)
            // Call acquireTokenPopup(popup window)
            if (requiresInteraction(error.errorCode)) {
                myMSALObj.acquireTokenPopup(requestObj).then(function (tokenResponse) {
                    callMSGraph(graphConfig.graphMeEndpoint, tokenResponse.accessToken, graphAPICallback);
                }).catch(function (error) {
                    console.log(error);
                });
            }
        });
    }

    function callMSGraph(theUrl, accessToken, callback) {
        console.log('theUrl ' + theUrl);
        console.log('accessToken ' + accessToken);
        console.log('callback ' + callback);
        document.getElementById('callAnn').innerHTML = accessToken;
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200)
                callback(JSON.parse(this.responseText));
        }
        xmlHttp.open("GET", theUrl, true); // true for asynchronous
        xmlHttp.setRequestHeader('Authorization', 'Bearer ' + accessToken);
        xmlHttp.send();
    }

    function graphAPICallback(data) {
        document.getElementById("json").innerHTML = JSON.stringify(data, null, 2);
    }

    function showWelcomeMessage() {
        var divWelcome = document.getElementById('WelcomeMessage');
        divWelcome.innerHTML = "Welcome " + myMSALObj.getAccount().userName + " to Microsoft Graph API";
        var loginbutton = document.getElementById('SignIn');
        loginbutton.innerHTML = 'Sign Out';
        loginbutton.setAttribute('onclick', 'signOut();');
    }

    //This function can be removed if you do not need to support IE
    function acquireTokenRedirectAndCallMSGraph() {
        //Always start with acquireTokenSilent to obtain a token in the signed in user from cache
        myMSALObj.acquireTokenSilent(requestObj).then(function (tokenResponse) {
            callMSGraph(graphConfig.graphMeEndpoint, tokenResponse.accessToken, graphAPICallback);
        }).catch(function (error) {
            console.log(error);
            // Upon acquireTokenSilent failure (due to consent or interaction or login required ONLY)
            // Call acquireTokenRedirect
            if (requiresInteraction(error.errorCode)) {
                myMSALObj.acquireTokenRedirect(requestObj);
            }
        });
    }

    function authRedirectCallBack(error, response) {
        if (error) {
            console.log(error);
        } else {
            if (response.tokenType === "access_token") {
                callMSGraph(graphConfig.graphMeEndpoint, response.accessToken, graphAPICallback);
            } else {
                console.log("token type is:" + response.tokenType);
            }
        }
    }

    function requiresInteraction(errorCode) {
        if (!errorCode || !errorCode.length) {
            return false;
        }
        return errorCode === "consent_required" ||
            errorCode === "interaction_required" ||
            errorCode === "login_required";
    }

    // Browser check variables
    var ua = window.navigator.userAgent;
    var msie = ua.indexOf('MSIE ');
    var msie11 = ua.indexOf('Trident/');
    var msedge = ua.indexOf('Edge/');
    var isIE = msie > 0 || msie11 > 0;
    var isEdge = msedge > 0;

    //If you support IE, our recommendation is that you sign-in using Redirect APIs
    //If you as a developer are testing using Edge InPrivate mode, please add "isEdge" to the if check

    // can change this to default an experience outside browser use
    var loginType = isIE ? "REDIRECT" : "POPUP";

    // runs on page load, change config to try different login types to see what is best for your application
    if (loginType === 'POPUP') {
        if (myMSALObj.getAccount()) {// avoid duplicate code execution on page load in case of iframe and popup window.
            showWelcomeMessage();
            acquireTokenPopupAndCallMSGraph();
        }
    }
    else if (loginType === 'REDIRECT') {
        document.getElementById("SignIn").onclick = function () {
            myMSALObj.loginRedirect(requestObj);
        };

        if (myMSALObj.getAccount() && !myMSALObj.isCallback(window.location.hash)) {// avoid duplicate code execution on page load in case of iframe and popup window.
            showWelcomeMessage();
            acquireTokenRedirectAndCallMSGraph();
        }
    } else {
        console.error('Please set a valid login type');
    }
</script>